/** Declaration file generated by dts-gen */

export = splitwise;

/**
 * doc: https://github.com/keriwarr/splitwise
 */
declare function splitwise(opts: splitwise.Options): splitwise.SplitwiseInstance;

declare namespace splitwise {
    interface Options {
        consumerKey: string;
        consumerSecret: string;
    }

    interface SplitwiseInstance {
        getCurrentUser(): Promise<User>;
        getGroups(): Promise<Group[]>;
        getGroup(id: number): Promise<Group>;
        getExpenses(options?: ExpenseOptions): Promise<Expense[]>;
        createExpense(expense: NewExpense): Promise<Expense>;
        // Add other methods here
    }

    interface User {
        id: number;
        first_name: string;
        last_name: string;
        email: string;
        // Add other parameters here
    }

    interface Group {
        id: number;
        name: string;
        members: User[];
        // Add other parameters here
    }

    interface Expense {
        id: number;
        group_id: number;
        description: string;
        cost: string;
        // Add other parameters here
    }

    interface NewExpense {
        cost: string;
        description: string;
        group_id: number;
        split_equally: boolean;
        users:{user_id:number,paid_share:string,owed_share:string}[];
        currency_code?: 'JPY' | 'USD' | 'EUR' | 'GBP';
        details?: string;
        // Add other parameters here
    }

    interface ExpenseOptions {
        group_id?: number;
        friend_id?: number;
        dated_after?: string;
        dated_before?: string;
        // Add other parameters here
    }
}